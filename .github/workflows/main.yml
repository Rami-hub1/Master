name: Maven API Deploy Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  prepare-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Install Dependencies
        run: mvn install -DskipTests

  build-api-proxy:
    runs-on: ubuntu-latest
    needs: prepare-dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Maven Package
        run: mvn package -DskipTests

  deploy-api:
    runs-on: ubuntu-latest
    needs: build-api-proxy
    steps:
      - name: Install Apigee CLI (Optional)
        run: |
          curl -L https://github.com/apigee/apigeecli/releases/latest/download/apigeecli_linux_amd64.tar.gz | tar xz
          mv apigeecli /usr/local/bin/
      
      - name: Deploy API Bundle to Apigee
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
          APIGEE_ENV: ${{ secrets.APIGEE_ENV }}
          APIGEE_TOKEN: ${{ secrets.APIGEE_TOKEN }}
        run: |
          apigeecli apis deploy \
          --organization "$APIGEE_ORG" \
          --environment "$APIGEE_ENV" \
          --name "my-api" \
          --bundle-path target/my-api-bundle.zip

  check-deploy-status:
    runs-on: ubuntu-latest
    needs: deploy-api
    steps:
      - name: Wait for Deployment Status
        run: sleep 30  # Wait for deployment to reflect in Apigee

      - name: Verify Deployment
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
          APIGEE_ENV: ${{ secrets.APIGEE_ENV }}
          APIGEE_TOKEN: ${{ secrets.APIGEE_TOKEN }}
        run: |
          # Logic to verify deployment status, possibly with an API call
          echo "Check deployment status here"
